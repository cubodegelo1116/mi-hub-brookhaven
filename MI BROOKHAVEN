local remote = game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t")
local selectedPlayer = nil 

local mensagens = {
	"EXECUTADO",
	"CARREGANDO",
	"MI TEAM BROOKHAVEN"
}

for _, mensagem in ipairs(mensagens) do
	remote:FireServer("RolePlayBio", mensagem)
	wait(0.7)
end

local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()

local Window = redzlib:MakeWindow({
    Title = "MI HUB | BROOKHAVENüè°",
    SubTitle = "by MI OWNER",
    SaveFolder = "ConfigFolder"
})

Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://127944178494237", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})

-- Aba Home
local Tab1 = Window:MakeTab({ "Home", "rbxassetid://10723415903" })

Tab1:AddDiscordInvite({
    Name = "MI TEAM",
    Description = "MI TEAM SERVER",
    Logo = "rbxassetid://127944178494237",
    Invite = "https://discord.gg/DDMDqKWynm"
})

local Paragraph = Tab1:AddParagraph({"FEITO POR", "MI TEAM"})

local Paragraph = Tab1:AddParagraph({"DONO", "MI TEAM OWNER"})

local Paragraph = Tab1:AddParagraph({"SUB DONO", "MI TEAM OWNER 2"})

local Paragraph = Tab1:AddParagraph({"MI", "MI"})

local Paragraph = Tab1:AddParagraph({"MI TEAM", "PARA SEMPRE"})

Tab1:AddButton({
    Name = "Rejoin Server",
    Callback = function()
        local TeleportService = game:GetService("TeleportService")
        local Players = game:GetService("Players")

        TeleportService:Teleport(game.PlaceId, Players.LocalPlayer)
    end
})

Tab1:AddButton({
    Name = "Abrir Console",
    Callback = function()
        local StarterGui = game:GetService("StarterGui")
        pcall(function()
            StarterGui:SetCore("DevConsoleVisible", true)
        end)
    end
})

local TabPlayers = Window:MakeTab({ "Players", "rbxassetid://10734962068" })

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local cam = workspace.CurrentCamera
 
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local currentPlayers = {}

for _, p in pairs(Players:GetPlayers()) do
    if p ~= LocalPlayer then
        table.insert(currentPlayers, p.Name)
    end
end

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local selectedPlayer = nil

local function findPlayerByPartialName(partial)
    partial = partial:lower()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then
            if plr.Name:lower():find(partial) then
                return plr.Name
            end
        end
    end
    return nil
end

local PlayerTextbox = TabPlayers:AddTextBox({
    Name = "Digite o nome (ou parte) do player",
    Default = "",
    TextDisappear = false,
    Callback = function(value)
        if value == "" then
            selectedPlayer = nil
            print("Nenhum player selecionado")
        else
            local found = findPlayerByPartialName(value)
            if found then
                selectedPlayer = found
                print("Player selecionado:", selectedPlayer)
            else
                selectedPlayer = nil
                print("Nenhum player corresponde ao texto")
            end
        end
    end
})


TabPlayers:AddToggle({
    Name = "View",
    Callback = function(Value)
        viewing = Value
        if viewing and selectedPlayer and game.Players:FindFirstChild(selectedPlayer) then
            task.spawn(function()
                while viewing do
                    local target = game.Players:FindFirstChild(selectedPlayer)
                    if target and target.Character and target.Character:FindFirstChild("Humanoid") then
                        cam.CameraSubject = target.Character.Humanoid
                    else
                        break
                    end
                    task.wait()
                end
            end)
        else
            local myChar = game.Players.LocalPlayer.Character
            if myChar and myChar:FindFirstChild("Humanoid") then
                cam.CameraSubject = myChar.Humanoid
            end
        end
    end
})

TabPlayers:AddButton({
    Name = "Teleport",
    Callback = function()
        local Players = game:GetService("Players")
        local Workspace = game:GetService("Workspace")
        local LocalPlayer = Players.LocalPlayer
        local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local HRP = Character:FindFirstChild("HumanoidRootPart")

        if not selectedPlayer then
            warn("Nenhum jogador selecionado.")
            return
        end

        local target = Players:FindFirstChild(selectedPlayer)
        if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then
            warn("Jogador alvo inv√°lido.")
            return
        end

        local targetHRP = target.Character:FindFirstChild("HumanoidRootPart")
        HRP.CFrame = targetHRP.CFrame + Vector3.new(0, 3, 0) -- TP acima do player
    end
})

local espEnabled = false
local playerConnections = {}

-- Fun√ß√£o para calcular a dist√¢ncia
local function getDistance(character)
    if character and character:FindFirstChild("HumanoidRootPart") then
        return math.floor((character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude)
    end
    return 0
end

-- Fun√ß√£o para criar o ESP
local function createESP(player)
    if player == game.Players.LocalPlayer then return end -- Ignorar o jogador local

    local function setupESP(character)
        if not character:FindFirstChild("Head") then
            character:WaitForChild("Head")
        end
        if not character:FindFirstChildOfClass("Humanoid") then
            character:WaitForChild("Humanoid")
        end

        -- Garantir que o Highlight e o BillboardGui s√≥ sejam criados uma vez
        if character:FindFirstChild("ESP_Highlight") then return end

        -- Criando o Highlight
        local highlight = Instance.new("Highlight")
        highlight.Name = "ESP_Highlight"
        highlight.FillColor = Color3.new(1, 1, 1)
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0
        highlight.Parent = character

        -- Criando o BillboardGui
        local billboardGui = Instance.new("BillboardGui")
        billboardGui.Name = "ESP_Info"
        billboardGui.Size = UDim2.new(0, 150, 0, 30)
        billboardGui.StudsOffset = Vector3.new(0, 3, 0)
        billboardGui.Adornee = character:FindFirstChild("Head")
        billboardGui.AlwaysOnTop = true
        billboardGui.Parent = character

        -- Criando o Texto
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextColor3 = Color3.new(1, 1, 1)
        textLabel.TextStrokeTransparency = 1
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.SourceSans
        textLabel.Parent = billboardGui

        -- Fun√ß√£o para atualizar as informa√ß√µes
        local function updateInfo()
            if character and character:FindFirstChild("Humanoid") and character.PrimaryPart then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                local distance = getDistance(character)
                textLabel.Text = string.format("%s | Vida: %d | Dist√¢ncia: %d", player.Name, math.floor(humanoid.Health), distance)
            end
        end

        -- Atualizar a dist√¢ncia e a sa√∫de a cada 1 segundo
        local lastUpdate = 0
        game:GetService("RunService").Heartbeat:Connect(function()
            if espEnabled and tick() - lastUpdate > 1 then
                updateInfo()
                lastUpdate = tick()
            end
        end)

        -- Atualizar imediatamente ao criar
        updateInfo()
    end

    -- Criar ESP se o personagem j√° existir
    if player.Character then
        setupESP(player.Character)
    end

    -- Conectar ao evento de novos personagens
    player.CharacterAdded:Connect(function(character)
        if espEnabled then
            setupESP(character)
        end
    end)
end

-- Fun√ß√£o para remover o ESP de um jogador
local function removeESP(player)
    if player.Character then
        -- Remover Highlight
        if player.Character:FindFirstChild("ESP_Highlight") then
            player.Character.ESP_Highlight:Destroy()
        end
        -- Remover BillboardGui
        if player.Character:FindFirstChild("ESP_Info") then
            player.Character.ESP_Info:Destroy()
        end
    end
end

-- Fun√ß√£o para ativar o ESP
local function enableESP()
    espEnabled = true
    for _, player in pairs(game.Players:GetPlayers()) do
        -- Criar ESP imediatamente quando o jogador j√° est√° no jogo
        if player.Character then
            createESP(player)
        end
        -- Conex√£o para futuros personagens do jogador
        playerConnections[player] = player.CharacterAdded:Connect(function(character)
            if espEnabled then
                createESP(player)
            end
        end)
    end

    -- Conex√£o para novos jogadores
    playerConnections["PlayerAdded"] = game.Players.PlayerAdded:Connect(function(player)
        if espEnabled then
            -- Criar ESP imediatamente para novos jogadores
            if player.Character then
                createESP(player)
            end
            -- Conectar ao evento CharacterAdded
            playerConnections[player] = player.CharacterAdded:Connect(function(character)
                createESP(player)
            end)
        end
    end)
end

-- Fun√ß√£o para desativar o ESP
local function disableESP()
    espEnabled = false
    for _, player in pairs(game.Players:GetPlayers()) do
        removeESP(player)
        -- Desconectar eventos associados ao jogador
        if playerConnections[player] then
            playerConnections[player]:Disconnect()
            playerConnections[player] = nil
        end
    end

    -- Desconectar o evento de novos jogadores
    if playerConnections["PlayerAdded"] then
        playerConnections["PlayerAdded"]:Disconnect()
        playerConnections["PlayerAdded"] = nil
    end
end

-- Criando o Toggle para ligar/desligar o ESP
TabPlayers:AddToggle({
  Name = "Esp",
  Default = false,
  Callback = function(state)
    if state then
        enableESP()
    else
        disableESP()
    end
  end
})

TabPlayers:AddSection({ " kill -" })

-- Auto Fling
local flingActive = false

TabPlayers:AddToggle({
    Name = "fling sof√°",
    Description = "fling sof√°",
    Default = false,
    Callback = function(state)
        flingActive = state

        if state and selectedPlayer then
            local target = Players:FindFirstChild(selectedPlayer)
            if not target or not target.Character then return end

            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
            if not root or not tRoot then return end

            local char = LocalPlayer.Character
            local hum = char:FindFirstChildOfClass("Humanoid")
            local original = root.CFrame

            -- ‚úÖ Pegando o Couch automaticamente, por nome
            local tool = LocalPlayer.Backpack:FindFirstChild("Couch") or LocalPlayer.Character:FindFirstChild("Couch")
            if tool then tool.Parent = char end

            workspace.FallenPartsDestroyHeight = 0/0

            local bv = Instance.new("BodyVelocity")
            bv.Name = "FlingForce"
            bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
            bv.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            bv.Parent = root

            hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
            hum.PlatformStand = false

            cam.CameraSubject = tRoot

            task.spawn(function()
                local angle = 0
                local tHum = target.Character:FindFirstChildOfClass("Humanoid")

                -- ‚úÖ Se o player j√° est√° sentado, n√£o faz nada
                if tHum and tHum.Sit then
                    flingActive = false
                    bv:Destroy()
                    hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                    hum.PlatformStand = false
                    root.CFrame = original
                    cam.CameraSubject = hum
                    hum:UnequipTools()
                    return
                end

                -- ‚úÖ Se n√£o est√° sentado, come√ßa o loop
                while flingActive and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
                    tHum = target.Character:FindFirstChildOfClass("Humanoid")
                    if tHum.Sit then break end

                    angle += 50
                    root.CFrame = tRoot.CFrame * CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(angle), 0, 0)
                    root.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    root.RotVelocity = Vector3.new(9e8, 9e8, 9e8)

                    task.wait()
                end

                -- ‚úÖ Ao sentar, ou desligar, reseta tudo
                flingActive = false
                bv:Destroy()
                hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                hum.PlatformStand = false
                root.CFrame = original
                cam.CameraSubject = hum

                for _, p in pairs(char:GetDescendants()) do
                    if p:IsA("BasePart") then
                        p.Velocity = Vector3.zero
                        p.RotVelocity = Vector3.zero
                    end
                end

                hum:UnequipTools()
            end)
        end
    end
})



-- Auto Bring
local bringActive = false
TabPlayers:AddToggle({
    Name = "Bring sof√°",
    Description = "Puxa o jogador selecionado usando f√≠sica (sem matar).",
    Default = false,
    Callback = function(state)
        bringActive = state
        if state and selectedPlayer then
            local target = Players:FindFirstChild(selectedPlayer)
            if not target or not target.Character then return end

            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            local tRoot = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
            if not root or not tRoot then return end

            local char = LocalPlayer.Character
            local hum = char:FindFirstChildOfClass("Humanoid")
            local originalPos = root.Position

            -- ‚úÖ Pegando o Couch automaticamente, por nome
            local tool = LocalPlayer.Backpack:FindFirstChild("Couch") or LocalPlayer.Character:FindFirstChild("Couch")
            if tool then tool.Parent = char end

            hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
            hum.PlatformStand = false
            cam.CameraSubject = tRoot

            local align = Instance.new("BodyPosition")
            align.Name = "BringPosition"
            align.MaxForce = Vector3.new(1/0, 1/0, 1/0)
            align.D = 10
            align.P = 30000
            align.Position = root.Position
            align.Parent = tRoot

            task.spawn(function()
                local angle = 0
                while bringActive and target and target.Character and target.Character:FindFirstChildOfClass("Humanoid") do
                    local tHum = target.Character:FindFirstChildOfClass("Humanoid")
                    if not tHum or tHum.Sit then break end

                    angle += 50
                    root.CFrame = tRoot.CFrame * CFrame.new(0, 2, 0) * CFrame.Angles(math.rad(angle), 0, 0)
                    align.Position = root.Position + Vector3.new(2, 0, 0)
                    task.wait()
                end

                bringActive = false
                align:Destroy()
                hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                hum.PlatformStand = false
                cam.CameraSubject = hum

                for _, p in pairs(char:GetDescendants()) do
                    if p:IsA("BasePart") then
                        p.Velocity = Vector3.zero
                        p.RotVelocity = Vector3.zero
                    end
                end

                task.wait(0.1)
                root.Anchored = true
                root.CFrame = CFrame.new(originalPos + Vector3.new(0, 5, 0))
                task.wait(0.2)
                root.Anchored = false
            end)
        end
    end
})

-- Fling All
TabPlayers:AddButton({
    Name = "Fling All",
    Description = "fling all",
    Callback = function()
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local targetRoot = player.Character.HumanoidRootPart
                local myRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local hum = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")

                if myRoot and hum then
                    local tool = LocalPlayer.Backpack:FindFirstChildOfClass("Tool")
                    if tool then tool.Parent = LocalPlayer.Character end

                    workspace.FallenPartsDestroyHeight = 0/0

                    local bv = Instance.new("BodyVelocity")
                    bv.Name = "FlingForce"
                    bv.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    bv.MaxForce = Vector3.new(1/0, 1/0, 1/0)
                    bv.Parent = myRoot

                    hum:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
                    hum.PlatformStand = false

                    cam.CameraSubject = targetRoot

                    task.spawn(function()
                        local angle = 0
                        local timeLimit = tick() + 3
                        while tick() < timeLimit do
                            angle += 50
                            myRoot.CFrame = targetRoot.CFrame * CFrame.new(0, 1.5, 0) * CFrame.Angles(math.rad(angle), 0, 0)
                            myRoot.Velocity = Vector3.new(9e8, 9e8, 9e8)
                            myRoot.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                            task.wait()
                        end

                        bv:Destroy()
                        hum:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                        hum.PlatformStand = false
                        cam.CameraSubject = hum

                        for _, p in pairs(LocalPlayer.Character:GetDescendants()) do
                            if p:IsA("BasePart") then
                                p.Velocity = Vector3.zero
                                p.RotVelocity = Vector3.zero
                            end
                        end
                    end)
                    task.wait(0.5)
                end
            end
        end
    end
})

TabPlayers:AddButton({
    Name = "Give sof√° <",
    Callback = function()
        local args = {
    [1] = "PickingTools",
    [2] = "Couch"
}

game:GetService("ReplicatedStorage").RE:FindFirstChild("1Too1l"):InvokeServer(unpack(args))

    end
})


TabPlayers:AddButton({
    Name = "Ban - House",
    Callback = function()
        if not selectedPlayer then
            warn("Nenhum jogador selecionado.")
            return
        end
        
        local Player = game.Players.LocalPlayer
        local Backpack = Player.Backpack
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Houses = game.Workspace:FindFirstChild("001_Lots")
        local OldPos = RootPart.CFrame
        local Angles = 0
        local Vehicles = Workspace.Vehicles
        local Pos

        -- Function:
        function Check()
            if Player and Character and Humanoid and RootPart and Vehicles then
                return true
            else
                return false
            end
        end

        -- Main:
        if not selectedPlayer then
            return
        end
        if Check() then
            local House = Houses:FindFirstChild(Player.Name.."House")
            if not House then
                local EHouse
                for _,Lot in pairs(Houses:GetChildren()) do
                    if Lot.Name == "For Sale" then
                        for _,num in pairs(Lot:GetDescendants()) do
                            if num:IsA("NumberValue") and num.Name == "Number" and num.Value < 25 and num.Value > 10 then
                                EHouse = Lot
                                break
                            end
                        end
                    end
                end

                local BuyDetector = EHouse:FindFirstChild("BuyHouse")
                Pos = BuyDetector.Position
                if BuyDetector and BuyDetector:IsA("BasePart") then
                    RootPart.CFrame = BuyDetector.CFrame + Vector3.new(0,-6,0)
                    task.wait(.5)
                    local ClickDetector = BuyDetector:FindFirstChild("ClickDetector")
                    if ClickDetector then
                        fireclickdetector(ClickDetector)
                    end
                end
            end

            task.wait(0.5)
            local PreHouse = Houses:FindFirstChild(Player.Name .. "House")
            if PreHouse then
                task.wait(0.5)
                local Number
                for i,x in pairs(PreHouse:GetDescendants()) do
                    if x.Name == "Number" and x:IsA("NumberValue") then
                        Number = x
                    end
                end
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Gettin1gHous1e"):FireServer("PickingCustomHouse","052_House", Number.Value)
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            if not PCar then
                if Check() then
                    RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
                    task.wait(0.5)
                    game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar","SchoolBus")
                    task.wait(0.5)
                    local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                    task.wait(0.5)
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end
            end

            task.wait(0.5)
            local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
            if PCar then
                if not Humanoid.Sit then
                    local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                    if Seat then
                        repeat task.wait()
                            RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                        until Humanoid.Sit
                    end
                end

                local Target = game.Players:FindFirstChild(selectedPlayer)
                local TargetC = Target.Character
                local TargetH = TargetC:FindFirstChildOfClass("Humanoid")
                local TargetRP = TargetC:FindFirstChild("HumanoidRootPart")
                if TargetC and TargetH and TargetRP then
                    if not TargetH.Sit then
                        while not TargetH.Sit do
                            task.wait()
                            local Fling = function(alvo,pos,angulo)
                                PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                            end
                            Angles = Angles + 100
                            Fling(TargetRP,CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10,CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP,CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10,CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP,CFrame.new(2.25, 1.5, -2.25)  + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10,CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP,CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10,CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP,CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10,CFrame.Angles(math.rad(Angles), 0, 0))
                            Fling(TargetRP,CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10,CFrame.Angles(math.rad(Angles), 0, 0))
                        end

                        task.wait(0.2)
                        local House = Houses:FindFirstChild(Player.Name.."House")
                        PCar:SetPrimaryPartCFrame(CFrame.new(House.HouseSpawnPosition.Position))
                        task.wait(0.2)
                        local pedro = Region3.new(game.Players.LocalPlayer.Character.HumanoidRootPart.Position - Vector3.new(30,30,30),game.Players.LocalPlayer.Character.HumanoidRootPart.Position + Vector3.new(30,30,30))

                        local a = workspace:FindPartsInRegion3(pedro,game.Players.LocalPlayer.Character.HumanoidRootPart,math.huge)

                        for i,v in pairs(a) do
                            if v.Name == "HumanoidRootPart" then
                                local b = game:GetService("Players"):FindFirstChild(v.Parent.Name)
                                local args = {
                                    [1] = "BanPlayerFromHouse",
                                    [2] = b,
                                    [3] = v.Parent
                                }

                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))

                                -- Excluir todos os ve√≠culos imediatamente ap√≥s o banimento:
                                local args = {
                                    [1] = "DeleteAllVehicles"
                                }
                                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer(unpack(args))
                            end
                        end
                    end
                end
            end
        end
    end
})

TabPlayers:AddButton({
    Name = "Car - Kill",
    Callback = function()
        -- Verifique se h√° um jogador selecionado
        if not selectedPlayer then
            warn("Nenhum jogador selecionado!")
            return
        end

        local Player = game.Players.LocalPlayer
        local Character = Player.Character
        local Humanoid = Character:FindFirstChildOfClass("Humanoid")
        local RootPart = Character:FindFirstChild("HumanoidRootPart")
        local Vehicles = game.Workspace:FindFirstChild("Vehicles")
        local OldPos = RootPart.CFrame

        if not Humanoid then return end

        -- Spawn do carro, caso n√£o exista
        local PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if not PCar then
            if RootPart then
                RootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)  -- Posi√ß√£o inicial
                task.wait(0.5)
                game:GetService("ReplicatedStorage").RE:FindFirstChild("1Ca1r"):FireServer("PickingCar", "SchoolBus")
                task.wait(0.5)
                PCar = Vehicles:FindFirstChild(Player.Name.."Car")
                task.wait(0.5)

                local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
                if Seat then
                    repeat
                        task.wait()
                        RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                    until Humanoid.Sit
                end
            end
        end

        -- Verifique novamente ap√≥s um tempo
        task.wait(0.5)
        PCar = Vehicles:FindFirstChild(Player.Name.."Car")
        if PCar and not Humanoid.Sit then
            local Seat = PCar:FindFirstChild("Body") and PCar.Body:FindFirstChild("VehicleSeat")
            if Seat then
                repeat
                    task.wait()
                    RootPart.CFrame = Seat.CFrame * CFrame.new(0, math.random(-1, 1), 0)
                until Humanoid.Sit
            end
        end

        -- Encontre o jogador selecionado
        local TargetPlayer = game.Players:FindFirstChild(selectedPlayer)
        if TargetPlayer then
            local TargetC = TargetPlayer.Character
            local TargetH = TargetC and TargetC:FindFirstChildOfClass("Humanoid")
            local TargetRP = TargetC and TargetC:FindFirstChild("HumanoidRootPart")

            if TargetC and TargetH and TargetRP then
                if not TargetH.Sit then
                    while not TargetH.Sit do
                        task.wait()

                        -- Gera rota√ß√µes aleat√≥rias
                        local randomX = math.random(-360, 360)
                        local randomY = math.random(-360, 360)
                        local randomZ = math.random(-360, 360)

                        -- Fun√ß√£o para movimentar o carro ao redor do alvo
                        local kill = function(alvo, pos, angulo)
                            PCar:SetPrimaryPartCFrame(CFrame.new(alvo.Position) * pos * angulo)
                        end

                        -- Movimentos do carro ao redor do alvo com rota√ß√µes aleat√≥rias
                        kill(TargetRP, CFrame.new(0, 1, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05, CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        kill(TargetRP, CFrame.new(0, -2.25, 5) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05, CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        kill(TargetRP, CFrame.new(0, 2.25, 0.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        kill(TargetRP, CFrame.new(-2.25, -1.5, 2.25) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.10, CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        kill(TargetRP, CFrame.new(0, 1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05, CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                        kill(TargetRP, CFrame.new(0, -1.5, 0) + TargetH.MoveDirection * TargetRP.Velocity.Magnitude / 1.05, CFrame.Angles(math.rad(randomX), math.rad(randomY), math.rad(randomZ)))
                    end

                    -- Quando o alvo sentar, mover o carro para longe e voltar √† posi√ß√£o original
                    task.wait(0.1)
                    PCar:SetPrimaryPartCFrame(CFrame.new(0, -470, 0))  -- Mover o carro para longe
                    task.wait(0.2)

                    -- Finaliza√ß√£o
                    Humanoid.Sit = false
                    task.wait(0.1)
                    RootPart.CFrame = OldPos  -- Retornar √† posi√ß√£o original
                end
            end
        end
    end
})

TabPlayers:AddButton({
    Name = "Car - Bring",
    Callback = function()
        bringPlayer()
    end
})

TabPlayers:AddButton({
    Name = "Ban House All",
    Callback = function()
loadstring(game:HttpGet("https://pastebin.com/raw/2PEwAWga"))
    end
})

local TabScripts = Window:MakeTab({ "scripts", "rbxassetid://10747822677" })

TabScripts:AddButton({
    Name = "iy",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end
})

TabScripts:AddButton({
    Name = "gumball hub",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/JaozinScripts/Gumball-Hub/refs/heads/main/GumballHubRetorn2.1.1.1.lua"))()
    end

})
